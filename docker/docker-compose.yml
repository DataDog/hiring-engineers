version: '3.5'

services: 
    datadog:
        build:
            context: ./datadog
            dockerfile: Dockerfile
        env_file: 
            - env/datadog.env
        volumes: 
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - /proc/:/host/proc/:ro
            - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro

    mongo:
        image: mongo
        restart: always
        volumes: 
            - ./mongo/:/docker-entrypoint-initdb.d/
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: example
            MONGO_INITDB_DATABASE: admin
            DATADOG_USER_PASSWORD: hire_me
        labels: 
            com.datadoghq.ad.check_names: '["mongo"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.instances: '[{"server": "mongodb://datadog:hire_me@%%host%%:%%port%%/admin", "replica_check": true, "additional_metrics": ["metrics.commands","tcmalloc","top","collection"]}]'
            com.datadoghq.ad.logs: '[{"source": "mongodb", "service": "mongo"}]'

    mongo-express:
        image: mongo-express
        restart: always
        ports:
            - 8081:8081
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: example

    pingpong-server:
        build: 
            context: ./ping-pong-app/server
            dockerfile: Dockerfile
        depends_on:
                - datadog
        environment: 
            PORT: 50051
            DD_AGENT_HOST: datadog
        ports: 
            - 50051:50051

    pingpong-client:
        build: 
            context: ./ping-pong-app/client
            dockerfile: Dockerfile
        depends_on:
                - pingpong-server
        environment: 
            ADDRESS: pingpong-server:50051
            NB_REQUEST: 100
        