update bios, enable  vt-x
install virtualbox
https://www.virtualbox.org/wiki/Downloads
install vagrant
https://www.vagrantup.com/downloads.html
open cmd shell
cd c:\hashicorp
mkdir xenial64
vagrant init ubuntu/xenial64
vagrant up
vagrant ssh
DD_API_KEY=149af9318091dbc92d4e4e2ec60f32f1 bash -c "$(curl -L https://raw.githubusercontent.com/DataDog/datadog-agent/master/cmd/agent/install_script.sh)"


--Add tags in the Agent config file and show us a screenshot of your host and its tags on the Host Map page in Datadog.
https://docs.datadoghq.com/getting_started/tagging/assigning_tags/
https://docs.datadoghq.com/agent/basic_agent_usage/ubuntu/
cd /etc/datadog-agent
sudo cp datadog.yaml datadog.yaml.bak
sudo nano datadog.yaml

# Set the host's tags (optional)
tags:
 - region:east
 - region:south
 - application:database
 - database:primary
 - role:testing

sudo service datadog-agent restart
sudo datadog-agent status


--Install a database on your machine (MongoDB, MySQL, or PostgreSQL) and then install the respective Datadog integration for that database.
sudo apt-get update
sudo apt-get install mysql-server
https://docs.datadoghq.com/agent/faq/agent-configuration-files/#agent-configuration-directory
https://docs.datadoghq.com/integrations/mysql/
cd /etc/datadog-agent/conf.d/mysql.d
sudo cp conf.yaml.example conf.yaml
https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost
mysql -u root -p
CREATE USER 'datadog'@'localhost' IDENTIFIED BY 'Rm117Onleave';

#from unix commandline, not mysql commandline
mysql -u datadog --password=Rm117Onleave -e "show status" | \
grep Uptime && echo -e "\033[0;32mMySQL user - OK\033[0m" || \
echo -e "\033[0;31mCannot connect to MySQL\033[0m"

mysql -u datadog --password=Rm117Onleave -e "show slave status" && \
echo -e "\033[0;32mMySQL grant - OK\033[0m" || \
echo -e "\033[0;31mMissing REPLICATION CLIENT grant\033[0m"


#from mysql commandline
GRANT REPLICATION CLIENT ON *.* TO 'datadog'@'localhost' WITH MAX_USER_CONNECTIONS 5;
GRANT PROCESS ON *.* TO 'datadog'@'localhost';
show databases like 'performance_schema';
GRANT SELECT ON performance_schema.* TO 'datadog'@'localhost';

cd /etc/datadog-agent/conf.d/mysql.d
#Add this configuration block to your mysql.d/conf.yaml

 - server: 127.0.0.1
   user: datadog
   pass: 'Rm117Onleave'
   port: 3306
   options:
       replication: 0
       galera_cluster: 1
       extra_status_metrics: true
       extra_innodb_metrics: true
       extra_performance_metrics: true
       schema_size_metrics: false
       disable_innodb_metrics: false


sudo service datadog-agent restart
sudo datadog-agent status


sudo nano /etc/mysql/my.cnf

[mysqld_safe]
log_error=/var/log/mysql/mysql_error.log
[mysqld]
general_log = on
general_log_file = /var/log/mysql/mysql.log
log_error=/var/log/mysql/mysql_error.log
slow_query_log = on
slow_query_log_file = /var/log/mysql/mysql-slow.log
long_query_time = 2

service mysql restart





https://help.datadoghq.com/hc/en-us/articles/360001001211-Setting-file-permissions-for-rotating-logs-linux-
sudo setfacl -m u:dd-agent:rx /var/log/mysql
getfacl /var/log/mysql
sudo touch /etc/logrotate.d/dd-agent_ACLs
sudo nano /etc/logrotate.d/dd-agent_ACLs


{
 postrotate
 /usr/bin/setfacl -m g:dd-agent:rx /var/log/mysql
 endscript
}

sudo nano /etc/logrotate.d/mysql-server
edit first line to look like/var/log/mysql.log /var/log/mysql/*log /var/log/mysql/mysql.log /var/log/mysql/mysql-slow.log {
edit create line, look like  create 644 mysql adm

sudo nano /etc/datadog-agent/datadog.yaml
# Logs agent is disabled by default
logs_enabled: true
cd /etc/datadog-agent/conf.d/mysql.d
sudo cp conf.yaml conf.yaml.bak
sudo nano conf.yaml

logs:
 - type: file
   path: /var/log/mysql/mysql_error.log
   source: mysql
   sourcecategory: database
   service: myapplication

 - type: file
   path: /var/log/mysql/mysql-slow.log
   source: mysql
   sourcecategory: database
   service: myapplication

 - type: file
   path: /var/log/mysql/mysql.log
   source: mysql
   sourcecategory: database
   service: myapplication
   # For multiline logs, if they start by the date with the format yyyy-mm-dd uncomment the following processing rule
   # log_processing_rules:
   #   - type: multi_line
   #     name: new_log_start_with_date
   #     pattern: \d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])

sudo service datadog-agent restart
sudo datadog-agent status


--Create a custom Agent check that submits a metric named my_metric with a random value between 0 and 1000.
https://docs.datadoghq.com/developers/agent_checks/
https://datadog.github.io/summit-training-session/handson/customagentcheck/
https://docs.python.org/2/library/random.html
https://help.datadoghq.com/hc/en-us/articles/115002137506-Where-can-I-visualize-my-service-check-in-the-Datadog-UI-
cd /etc/datadog-agent/conf.d/
sudo nano my_check.yaml

init_config:

instances:
  - min_collection_interval: 45 #Change your check's collection interval so that it only submits the metric once every 45 seconds.

cd /etc/datadog-agent/checks.d
sudo nano my_check.py

import random
from checks import AgentCheck
class my_metricCheck(AgentCheck):
  def check(self, instance):

    data=random.randrange(0, 1000, 1)

    self.gauge('my_check.update.value', data)


sudo -u dd-agent -- datadog-agent check my_check
sudo service datadog-agent restart

--Bonus Question Can you change the collection interval without modifying the Python check file you created?
https://help.datadoghq.com/hc/en-us/articles/204590189-Is-there-an-alternative-to-dogstatsd-and-the-api-to-submit-metrics-Threadstats-

--Utilize the Datadog API to create a Timeboard that contains:
--Your custom metric scoped over your host.
https://app.datadoghq.com/dash/879620?live=false&page=0&is_auto=false&from_ts=1533343099705&to_ts=1533343399705&tile_size=m&fullscreen=false

--Any metric from the Integration on your Database with the anomaly function applied.
https://www.datadoghq.com/blog/introducing-anomaly-detection-datadog/
https://app.datadoghq.com/monitors/5814287

--Your custom metric with the rollup function applied to sum up all the points for the past hour into one bucket
metric = max:my_check.update.value{*}.rollup(sum)
https://docs.datadoghq.com/graphing/

--Take a snapshot of this graph and use the @ notation to send it to yourself.
shows up in events

--Bonus Question: What is the Anomaly graph displaying?
By analyzing a metric’s historical behavior, anomaly detection distinguishes between normal and abnormal metric trends.Anomaly detection can separate the trend component from the seasonal component of a timeseries, so it can track metrics that are trending steadily upward or downward. its not just a high or a low, it is using statistical modelsto dectect something outside of normal. for example traffic, might be slow on a sunday morning, but to hit that same lower number on a tusday afternoon would not trigger a normal alert, it needs to coorelate historical trends. 


--Monitoring Data
https://docs.datadoghq.com/monitors/monitor_types/metric/
https://docs.datadoghq.com/monitors/notifications/#message-template-variables

{{#is_alert}} value over 800, actual value of {{value}} and with IP {{host.ip}}  {{/is_alert}}
{{#is_warning}} value over 500 {{/is_warning}}
{{#is_no_data}} there is No Data for this query over the past 10m {{/is_no_data}} @hayesjonathand@gmail.com

pic - dd-02

https://docs.datadoghq.com/tracing/visualization/
cd /etc/datadog-agent/checks.d
https://stackoverflow.com/questions/31252791/flask-importerror-no-module-named-flask
cd /etc/datadog-agent/checks.d
sudo apt install virtualenv
sudo pip install flask
sudo virtualenv venv
sudo apt-get install python-virtualenv
. venv/bin/activate
sudo pip install blinker

sudo nano my_app.py

ddtrace-run python my_app.py

https://app.datadoghq.com/dash/879620?live=true&page=0&is_auto=false&from_ts=1533659542700&to_ts=1533673942700&tile_size=m

see dd-03

-- Bonus Question: What is the difference between a Service and a Resource?
- a service is the job/action that performs the task. on linux these are typically daemons, on windows they are "services". some examples incluse ntp for time, iis as webserver.
- a resource is an action on or using a service. an example is an end to end dns request fulfilled, here the dns service is asked to perform its task and return information. the request and answer is the resource 

--final question. I am currently on the lookout for server gear to fillout my homelab. write up a a webpage that does a pricelookup for the specific item, returns dollar amount. use alert thresholds to send email when price gets below certian point.

