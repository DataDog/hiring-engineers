Metadata-Version: 2.0
Name: datadog-checks-base
Version: 4.2.0
Summary: The Datadog Check Toolkit
Home-page: https://github.com/DataDog/integrations-core
Author: Datadog
Author-email: packages@datadoghq.com
License: BSD
Keywords: datadog agent checks
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: System :: Monitoring
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Provides-Extra: deps
Requires-Dist: ddtrace (==0.13.0); extra == 'deps'
Requires-Dist: prometheus-client (==0.3.0); extra == 'deps'
Requires-Dist: protobuf (==3.5.1); extra == 'deps'
Requires-Dist: pywin32 (==224); extra == 'deps'
Requires-Dist: requests (==2.19.1); extra == 'deps'
Requires-Dist: simplejson (==3.6.5); extra == 'deps'
Requires-Dist: six (==1.11.0); extra == 'deps'
Requires-Dist: uptime (==3.0.1); extra == 'deps'
Requires-Dist: uuid (==1.30); extra == 'deps'

# Datadog Checks Base

## Overview

This package provides the Python bits needed by the [Datadog Agent][1]
to run Agent-based Integrations (also known as _Checks_).

This _Check toolkit_ is used in two scenarios:

 1. When used from within the Python interpreter embedded in the Agent, it
 provides all the base classes and utilities needed by any Check.

 2. When installed in a local environment with a regular Python interpreter, it
 mocks the presence of a running Agent so checks can work in standalone mode,
 mostly useful for testing and development.

## Installation

Checks from [integrations-core][2] already
use the toolkit in a transparent way when you run the tests with Tox but you can
install the toolkit locally and play with it:
```
pip install git+https://github.com/DataDog/datadog-agent-tk.git
```

## Development

Create a dedicated virtualenv and follow the instructions in this paragraph
to work with the check.

To install the check in dev mode:
```
pip install -e .[dev]
```

To build the wheel package:
```
python setup.py bdist_wheel
```

To run the tests, [install tox][3] and just run:
```
tox
```

## Troubleshooting
Need help? Contact [Datadog Support][4].

[1]: https://github.com/DataDog/datadog-agent
[2]: https://github.com/DataDog/integrations-core
[3]: https://tox.readthedocs.io/en/latest/install.html
[4]: https://docs.datadoghq.com/help/


