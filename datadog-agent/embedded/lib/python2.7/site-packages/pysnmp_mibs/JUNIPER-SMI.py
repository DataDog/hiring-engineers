#
# PySNMP MIB module JUNIPER-SMI (http://pysnmp.sf.net)
# ASN.1 source http://mibs.snmplabs.com:80/asn1/JUNIPER-SMI
# Produced by pysmi-0.0.7 at Sun Feb 14 00:05:50 2016
# On host bldfarm platform Linux version 4.1.13-100.fc21.x86_64 by user goose
# Using Python version 3.5.0 (default, Jan  5 2016, 17:11:52) 
#
( Integer, OctetString, ObjectIdentifier, ) = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint")
( NotificationGroup, ModuleCompliance, ) = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
( ObjectIdentity, NotificationType, Counter32, Counter64, IpAddress, MibIdentifier, Bits, ModuleIdentity, Gauge32, Unsigned32, enterprises, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Integer32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "NotificationType", "Counter32", "Counter64", "IpAddress", "MibIdentifier", "Bits", "ModuleIdentity", "Gauge32", "Unsigned32", "enterprises", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Integer32")
( TextualConvention, DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
juniperMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636)).setRevisions(("2010-07-09 00:00", "2009-10-29 00:00", "2010-06-18 00:00", "2003-04-17 01:00", "2005-08-17 01:00", "2006-12-14 01:00", "2007-01-01 00:00", "2007-10-09 00:00", "2009-12-31 00:00", "2010-07-14 00:00", "2011-01-26 00:00", "2012-02-10 00:00", "2012-08-01 00:00", "2012-11-01 00:00", "2012-12-07 00:00", "2013-01-25 00:00", "2013-11-26 00:00",))
if mibBuilder.loadTexts: juniperMIB.setLastUpdated('201007090000Z')
if mibBuilder.loadTexts: juniperMIB.setOrganization('Juniper Networks, Inc.')
if mibBuilder.loadTexts: juniperMIB.setContactInfo('        Juniper Technical Assistance Center\n\t\t     Juniper Networks, Inc.\n\t\t     1194 N. Mathilda Avenue\n\t\t     Sunnyvale, CA 94089\n\t\t     E-mail: support@juniper.net')
if mibBuilder.loadTexts: juniperMIB.setDescription('The Structure of Management Information for Juniper Networks.')
jnxProducts = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 1))
if mibBuilder.loadTexts: jnxProducts.setDescription("The root of Juniper's Product OIDs.")
jnxMediaFlow = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 2))
jnxJunosSpace = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 3))
jnxReservedProducts3 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 4))
jnxReservedProducts4 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 5))
jnxReservedProducts5 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 6))
jnxSDKApplicationsRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 7))
jnxJAB = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 8))
jnxStrm = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 1, 9))
jnxServices = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 2))
if mibBuilder.loadTexts: jnxServices.setDescription("The root of Juniper's Services OIDs.")
jnxMibs = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 3))
if mibBuilder.loadTexts: jnxMibs.setDescription("The root of Juniper's MIB objects.")
jnxJsMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 39))
jnxExMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 40))
jnxWxMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 41))
jnxDcfMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 42))
jnxReservedMibs5 = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 43))
jnxPfeMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 44))
jnxBfdMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 45))
jnxXstpMibs = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 46))
jnxUtilMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 47))
jnxl2aldMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 48))
jnxL2tpMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 49))
jnxRpmMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 50))
jnxUserAAAMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 51))
jnxIpSecMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 52))
jnxL2cpMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 53))
jnxPwTdmMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 54))
jnxPwTCMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 55))
jnxOtnMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 56))
jnxPsuMIBRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 58))
jnxSvcsMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 59))
jnxDomMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 60))
jnxJdhcpMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 61))
jnxJdhcpv6MibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 62))
jnxLicenseMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 63))
jnxSubscriberMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 64))
jnxMagMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 65))
jnxMobileGatewayMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 66))
jnxPppoeMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 67))
jnxPppMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 68))
jnxJVAEMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 69))
jnxIfOtnMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 70))
jnxOpticsMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 71))
jnxAlarmExtMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 72))
jnxoptIfMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 73))
jnxFruMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 74))
jnxTimingNotfnsMIBRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 75))
jnxSnmpSetMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 3, 76))
jnxTraps = ObjectIdentity((1, 3, 6, 1, 4, 1, 2636, 4))
if mibBuilder.loadTexts: jnxTraps.setDescription("The root of Juniper's Trap OIDs.")
jnxChassisTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 1))
jnxChassisOKTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 2))
jnxRmonTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 3))
jnxLdpTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 4))
jnxCmNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 5))
jnxSonetNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 6))
jnxPMonNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 7))
jnxCollectorNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 8))
jnxPingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 9))
jnxSpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 10))
jnxDfcNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 11))
jnxSyslogNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 12))
jnxEventNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 13))
jnxVccpNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 14))
jnxOtnNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 15))
jnxSAIDPNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 16))
jnxCosNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 17))
jnxDomNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 18))
jnxFabricChassisTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 19))
jnxFabricChassisOKTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 20))
jnxIfOtnNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 21))
jnxOpticsNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 22))
jnxFruTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 23))
jnxSnmpSetTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 4, 24))
jnxExperiment = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 5))
jnxNsm = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 6))
jnxCA = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 7))
jnxAAA = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 8))
jnxAdvancedInsightMgr = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 9))
jnxBxMibRoot = MibIdentifier((1, 3, 6, 1, 4, 1, 2636, 10))
mibBuilder.exportSymbols("JUNIPER-SMI", jnxSonetNotifications=jnxSonetNotifications, jnxCosNotifications=jnxCosNotifications, juniperMIB=juniperMIB, jnxOpticsNotifications=jnxOpticsNotifications, jnxFruTraps=jnxFruTraps, jnxDfcNotifications=jnxDfcNotifications, jnxLicenseMibRoot=jnxLicenseMibRoot, jnxSnmpSetTraps=jnxSnmpSetTraps, jnxL2cpMibRoot=jnxL2cpMibRoot, jnxJdhcpMibRoot=jnxJdhcpMibRoot, jnxOtnNotifications=jnxOtnNotifications, jnxChassisTraps=jnxChassisTraps, jnxAlarmExtMibRoot=jnxAlarmExtMibRoot, jnxoptIfMibRoot=jnxoptIfMibRoot, jnxExMibRoot=jnxExMibRoot, jnxMobileGatewayMibRoot=jnxMobileGatewayMibRoot, jnxJsMibRoot=jnxJsMibRoot, jnxPsuMIBRoot=jnxPsuMIBRoot, jnxBxMibRoot=jnxBxMibRoot, jnxUserAAAMibRoot=jnxUserAAAMibRoot, jnxDcfMibRoot=jnxDcfMibRoot, jnxUtilMibRoot=jnxUtilMibRoot, jnxSyslogNotifications=jnxSyslogNotifications, jnxJdhcpv6MibRoot=jnxJdhcpv6MibRoot, jnxJVAEMibRoot=jnxJVAEMibRoot, jnxVccpNotifications=jnxVccpNotifications, jnxSnmpSetMibRoot=jnxSnmpSetMibRoot, jnxReservedProducts5=jnxReservedProducts5, jnxServices=jnxServices, jnxMibs=jnxMibs, jnxl2aldMibRoot=jnxl2aldMibRoot, jnxCollectorNotifications=jnxCollectorNotifications, jnxSAIDPNotifications=jnxSAIDPNotifications, jnxPppoeMibRoot=jnxPppoeMibRoot, jnxRpmMibRoot=jnxRpmMibRoot, jnxL2tpMibRoot=jnxL2tpMibRoot, jnxJunosSpace=jnxJunosSpace, jnxBfdMibRoot=jnxBfdMibRoot, jnxEventNotifications=jnxEventNotifications, jnxReservedProducts3=jnxReservedProducts3, jnxFabricChassisTraps=jnxFabricChassisTraps, jnxIfOtnNotifications=jnxIfOtnNotifications, jnxWxMibRoot=jnxWxMibRoot, jnxSvcsMibRoot=jnxSvcsMibRoot, jnxReservedMibs5=jnxReservedMibs5, jnxOtnMibRoot=jnxOtnMibRoot, jnxMagMibRoot=jnxMagMibRoot, jnxCmNotifications=jnxCmNotifications, jnxPMonNotifications=jnxPMonNotifications, jnxPingNotifications=jnxPingNotifications, jnxExperiment=jnxExperiment, jnxXstpMibs=jnxXstpMibs, jnxPppMibRoot=jnxPppMibRoot, jnxAAA=jnxAAA, jnxPwTdmMibRoot=jnxPwTdmMibRoot, jnxNsm=jnxNsm, jnxFruMibRoot=jnxFruMibRoot, jnxProducts=jnxProducts, jnxFabricChassisOKTraps=jnxFabricChassisOKTraps, jnxIfOtnMibRoot=jnxIfOtnMibRoot, jnxLdpTraps=jnxLdpTraps, jnxTimingNotfnsMIBRoot=jnxTimingNotfnsMIBRoot, jnxSDKApplicationsRoot=jnxSDKApplicationsRoot, jnxPwTCMibRoot=jnxPwTCMibRoot, jnxAdvancedInsightMgr=jnxAdvancedInsightMgr, jnxMediaFlow=jnxMediaFlow, jnxChassisOKTraps=jnxChassisOKTraps, jnxOpticsMibRoot=jnxOpticsMibRoot, jnxRmonTraps=jnxRmonTraps, jnxDomNotifications=jnxDomNotifications, jnxPfeMibRoot=jnxPfeMibRoot, PYSNMP_MODULE_ID=juniperMIB, jnxTraps=jnxTraps, jnxCA=jnxCA, jnxSpNotifications=jnxSpNotifications, jnxDomMibRoot=jnxDomMibRoot, jnxStrm=jnxStrm, jnxJAB=jnxJAB, jnxIpSecMibRoot=jnxIpSecMibRoot, jnxSubscriberMibRoot=jnxSubscriberMibRoot, jnxReservedProducts4=jnxReservedProducts4)
