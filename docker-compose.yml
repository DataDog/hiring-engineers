version: '3'
services:
  web:
    build:
      context: .                           #cannot have ./nginx here bc some dirs in Dockerfile would be outside of the context
      dockerfile: Dockerfile_nginx         #./nginx/Dockerfile doesn't work for the same reason above
    image: testweb_web:test
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:81:81
    environment:
      NGINX_HOST: ${YOUR_LOCAL_IP}
      NGINX_PORT: ${NGINX_PORT}
      APP_HOST: ${YOUR_LOCAL_IP}
      APP_PORT: ${APP_PORT}
  app:
    build:
      context: .
    image: testweb_app:test
    ports: 
      - 0.0.0.0:8000:8000
    depends_on:
      - "db"                               #Doesnt mean app wait until db starts its service, but can confirm that db is up.
    environment:
      DEBUG: "True"
      DOCKPGHOST: ${DB_HOST}
      DOCKPGPORT: ${DB_PORT}
      DOCKPGDB: testweb
      DOCKPGUSER: postgres
      DOCKPGPASSWD: Test1Pass              #local usage only
      SECRET_KEY: Example5ecretKey         #local usage only
      NEVERCACHE_KEY: Example2evercacheKey #local usage only
  db:
    build:
      context: .
      dockerfile: Dockerfile_postgres
    image: testweb_db:9.6
    ports:
      - 0.0.0.0:5432:5432
    environment:
      POSTGRES_PASSWORD: Test1Pass         #local usage only
      POSTGRES_DB: testweb
      POSTGRES_USER: postgres
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --locale=C
  datadog:
    build:
      context: .
      dockerfile: Dockerfile_datadog
    links:
     - web                                 # ensures that nginx web can send metrics
     - app                                 # ensures that python app can send metrics
     - db                                  # ensures that db send metrics
    environment:
     - DD_API_KEY=${YOUR_DD_API_KEY}       #Export Env before docker-compose
     - NGINX_HOST=${YOUR_LOCAL_IP}
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
